#!/bin/bash
#PBS -N section1_3_kan
#PBS -P p00
#PBS -q normal
#PBS -l ncpus=4
#PBS -l mem=32GB
#PBS -l walltime=1:00:00
#PBS -l storage=gdata/p00
#PBS -l wd
#PBS -j oe
#PBS -m abe
#PBS -M mc2303@nci.org.au

# ============================================================================
# PBS Job Script for Section 1.3: High-Dimensional Function Approximation
# ============================================================================
#
# Usage:
#   qsub gadi_section1_3.pbs                                    # Default: 10 epochs, 4 hours
#   qsub -v EPOCHS=100,WALLTIME=8:00:00 gadi_section1_3.pbs    # Custom: 100 epochs, 8 hours
#   qsub -v EPOCHS=1000,WALLTIME=48:00:00 gadi_section1_3.pbs  # Production: 1000 epochs, 48 hours
#
# Environment Variables:
#   EPOCHS     - Number of training epochs (default: 10)
#   WALLTIME   - PBS walltime in HH:MM:SS format (default: 4:00:00)
#
# User: mc2303
# Project: p00
#
# ============================================================================

# Set defaults if not provided
EPOCHS=${EPOCHS:-10}
echo "============================================================================"
echo "Section 1.3: High-Dimensional Function Approximation"
echo "============================================================================"
echo "Job ID: ${PBS_JOBID}"
echo "Job name: ${PBS_JOBNAME}"
echo "Allocated nodes: ${PBS_NODEFILE}"
echo "Working directory: ${PBS_O_WORKDIR}"
echo "Epochs: ${EPOCHS}"
echo "Walltime: ${WALLTIME:-4:00:00}"
echo "Start time: $(date)"
echo "============================================================================"

# Load required modules
module purge
module load python3/3.10.4
module list

# Navigate to section1 directory
cd ${PBS_O_WORKDIR}/section1 || { echo "Error: section1 directory not found"; exit 1; }

# Set up Python virtual environment
VENV_DIR="${PBS_O_WORKDIR}/.venv_gadi"
echo ""
echo "Setting up Python environment..."

if [ ! -d "${VENV_DIR}" ]; then
    echo "Creating new virtual environment at ${VENV_DIR}"
    python3 -m venv ${VENV_DIR}
else
    echo "Using existing virtual environment at ${VENV_DIR}"
fi

# Activate virtual environment
source ${VENV_DIR}/bin/activate

# Upgrade pip
echo "Upgrading pip..."
pip install --upgrade pip

# Install requirements
echo ""
echo "Installing requirements from madoc/requirements.txt..."
pip install -r ${PBS_O_WORKDIR}/requirements.txt

# Verify installation
echo ""
echo "Verifying PyKAN installation..."
python3 -c "from kan import KAN; print('PyKAN imported successfully')" || { echo "Error: PyKAN import failed"; exit 1; }

# Create results directory
mkdir -p sec1_results

# Run section1_3.py
echo ""
echo "============================================================================"
echo "Running section1_3.py with ${EPOCHS} epochs..."
echo "============================================================================"
python3 section1_3.py --epochs ${EPOCHS}

# Check exit status
EXIT_STATUS=$?
echo ""
echo "============================================================================"
echo "Job completed with exit status: ${EXIT_STATUS}"
echo "End time: $(date)"
echo "============================================================================"

# Print results location
if [ ${EXIT_STATUS} -eq 0 ]; then
    echo ""
    echo "Results saved to: ${PBS_O_WORKDIR}/section1/sec1_results/"
    echo "Latest results:"
    ls -lht ${PBS_O_WORKDIR}/section1/sec1_results/ | head -5
fi

# Deactivate virtual environment
deactivate

exit ${EXIT_STATUS}

# ============================================================================
# NOTES FOR GPU USAGE (currently configured for CPU)
# ============================================================================
# To run on GPU nodes instead:
#
# 1. Change queue to GPU queue:
#    #PBS -q gpuvolta
#
# 2. Request GPU resources:
#    #PBS -l ngpus=1
#
# 3. Uncomment GPU-specific PyTorch in requirements.txt
#
# 4. Load CUDA module:
#    module load cuda/11.8.0
#
# GPU job submission example:
#    qsub -v EPOCHS=1000,WALLTIME=24:00:00 -q gpuvolta gadi_section1_3.pbs
# ============================================================================
