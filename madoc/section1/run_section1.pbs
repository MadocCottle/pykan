#!/bin/bash
#PBS -P p00
#PBS -q normal
#PBS -l walltime=24:00:00
#PBS -l mem=32GB
#PBS -l ncpus=4
#PBS -l jobfs=10GB
#PBS -l storage=scratch/YOUR_PROJECT_CODE
#PBS -j oe
#PBS -N section1_experiment
#PBS -M u7138718@anu.edu.au
#PBS -m abe

# PBS script for running Section 1 experiments on NCI Gadi
#
# Usage:
#   qsub run_section1.pbs -v SCRIPT=section1_1.py,EPOCHS=100
#   qsub run_section1.pbs -v SCRIPT=section1_2.py,EPOCHS=200
#   qsub run_section1.pbs -v SCRIPT=section1_3.py,EPOCHS=150
#
# Variables:
#   SCRIPT  - Which script to run (section1_1.py, section1_2.py, or section1_3.py)
#   EPOCHS  - Number of training epochs (default: 10)
#
# Example:
#   qsub run_section1.pbs -v SCRIPT=section1_1.py,EPOCHS=100

# Exit on error
set -e

# =============================================================================
# Configuration
# =============================================================================

# Default values if not provided via -v
SCRIPT=${SCRIPT:-section1_1.py}
EPOCHS=${EPOCHS:-10}

# Validate SCRIPT argument
if [[ "$SCRIPT" != "section1_1.py" && "$SCRIPT" != "section1_2.py" && "$SCRIPT" != "section1_3.py" ]]; then
    echo "ERROR: SCRIPT must be one of: section1_1.py, section1_2.py, section1_3.py"
    echo "Got: $SCRIPT"
    exit 1
fi

echo "================================================"
echo "Section 1 Experiment on NCI Gadi"
echo "================================================"
echo "Job ID:       $PBS_JOBID"
echo "Job Name:     $PBS_JOBNAME"
echo "Node:         $(hostname)"
echo "Start Time:   $(date)"
echo "Script:       $SCRIPT"
echo "Epochs:       $EPOCHS"
echo "Working Dir:  $PBS_O_WORKDIR"
echo "================================================"
echo ""

# =============================================================================
# Environment Setup
# =============================================================================

# Change to the directory where the job was submitted
cd $PBS_O_WORKDIR

# Load Python module
module purge
module load python3/3.10.4

echo "Python version:"
python3 --version
echo ""

# Activate virtual environment
if [ ! -d ".venv" ]; then
    echo "ERROR: Virtual environment not found!"
    echo "Please run setup.sh first:"
    echo "  cd $PBS_O_WORKDIR"
    echo "  bash setup.sh"
    exit 1
fi

echo "Activating virtual environment..."
source .venv/bin/activate

# Verify PyKAN can be imported
echo "Verifying PyKAN installation..."
python3 -c "
import sys
from pathlib import Path
sys.path.insert(0, str(Path.cwd().parent.parent))
from kan import KAN
print('âœ“ PyKAN imported successfully')
print(f'  KAN class: {KAN}')
"
echo ""

# =============================================================================
# Run Experiment
# =============================================================================

echo "================================================"
echo "Running $SCRIPT with $EPOCHS epochs"
echo "================================================"
echo ""

# Create output directory for results
mkdir -p results
mkdir -p logs

# Run the experiment
python3 $SCRIPT --epochs $EPOCHS 2>&1 | tee logs/${SCRIPT%.py}_${EPOCHS}epochs_${PBS_JOBID}.log

EXIT_CODE=${PIPESTATUS[0]}

echo ""
echo "================================================"
echo "Experiment Complete"
echo "================================================"
echo "Exit Code:    $EXIT_CODE"
echo "End Time:     $(date)"
echo "Results saved in: results/"
echo "Log saved in:     logs/${SCRIPT%.py}_${EPOCHS}epochs_${PBS_JOBID}.log"
echo "================================================"

# Exit with the same code as the Python script
exit $EXIT_CODE
